#include "shell.h"
/**
 *splitString - splits a string into an array of pointers to words
 *@str: the string to be split
 *@delim: delimeter
 *Return: array of pointers to words
 */
char **splitString(char *str, cont char *delim)
{
	int i, wordCount;
	char **array;
	char *token;
	char *copy;

	copy = malloc(_strlen(str) + 1);
	if (copy == NULL)
	{
		perror(_getenv("_"));
		return (NULL);
	}
	i = 0;
	while (str[i])
	{
		copy[i] = str[i];
		i++;
	}
	copy[i] = '\0';
	token = strtok(copy, delim);
	array = malloc((sizeof(char *) * 2));
	array[0] = _strdup(token);
	i = 1;
	wordCount = 3;
	while (token)
	{
		token = strtok(NULL, delim);
		array = realloc(array, (sizeof(char *) * wordCount));
		array[i] = _strdup(token);
		i++;
		wordCount++;
	}
	free(copy);
	return (array);
}
/**
 *executeCommand - execute a command
 *@argv: array of arguments
 */
void executeCommand(char **argv)
{
	int childPid, status;
	if (!argv || !argv[0])
		return;
	childPid = fork();
	if (childPid == -1)
	{
		perror(getenv(""));
	}
	if (childPid == 0)
	{
		execve(argv[0], argv, environ);
		perror(argv[0]);
		exit(EXIT_FAILURE);
	}
	wait(&status);
}
